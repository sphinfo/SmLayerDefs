var DemoDescription = {};
//Map
DemoDescription['4326Map'] = {title: 'Geographic Coordinate', desc: 'Definition: This example is used to demonstrate world map with longitude and latitude projection.', oper: 'Move mouse on the map to display longitudes and latitudes at the bottom right corner.' }
DemoDescription['3857Map'] = {title: 'Mercator Coordinate', desc: 'Definition: This example is used to demonstrate china map with Mercator projection.', oper: 'Move mouse on the map to display coordinate information at the bottom right corner.' }
DemoDescription['changchunMap'] = {title: 'Plane-coordinate', desc: 'Definition: This example is used to demonstrate map with plane coordinate system.', oper: 'Move mouse on the map to display plane coordinates at the bottom right corner.' }
DemoDescription['cloudLayer'] = {title: 'SuperMap Cloud Layer', desc: 'Definition: Send request to the SuperMap cloud server to get layers published by SuperMap cloud service.', oper: 'None' }
DemoDescription['image'] = {title: 'Image Layer', desc: 'Definition: This layer is used to display the unique image. It can overlay the user image with other layers, and realize effect of zooming in, zooming out and panning at the same time.', oper: 'None' }
DemoDescription['overlayLayer'] = {title: 'Layer Overlay', desc: 'Display two TiledDynamicRESTLayer overlay. TiledDynamicLayer: The tiled dynamic layer The tiled dynamic layer calculates the scale and resolution of the layer mainly based on the real-time scale or resolution of the control. It then dynamically cut the display part of the map into multiple square tiles according to the scale or resolution of the current layer. The map is displayed by putting these tiles together. Why we call it a DynamicLayer? Because these square tiles are generated dynamically rather than generated previously.', oper: '' }
DemoDescription['dynamiclayers'] = {title: 'Dynamic Layer', desc: 'Definition: TiledDynamicRestLayer needs to load layer asynchronously. However, if dpi, maxExtent and resolnutios have been directly set, TiledDynamicRestLayer does not need to send request to the server and bind the layerInitialized event.', oper: 'None' }


DemoDescription['tianditu'] = {title: 'Tianditu Layer', desc: 'Use the Tianditu API to create the Tianditu map. Through iConnector, overlay the dot density thematic map created by iserver', oper: 'Click the button at the upper left corner to overlay the global dot density thematic map. And can transform the map projection.' }
DemoDescription['google'] = {title: 'Google Layer', desc: 'Use the Google API to create the Google map. Through iConnector, overlay the ThemeRange created by iserver', oper: 'Click the button at the upper left corner to overlay the area ranges thematic map for Chinese provinces.' }
DemoDescription['arcGIS93Rest']={title:'ArcGIS Layer',desc:'Use the ArcGIS API to create a map. Through iConnector, overlay the ThemeUnique created by iserver', oper: 'Click the button at the upper left corner to overlay the area thematic map for Chinese provinces.' }
DemoDescription['baidu'] = {title: 'Baidu Layer', desc: 'Use the Baidu API to create the Baidu map. Through iConnector, overlay the ThemeGraduatedSymbol created by iserver', oper: 'Click the button at the upper left corner to overlay the area graduated symbols map for Chinese provinces.' }
DemoDescription['aMap'] = {title: 'AMap Layer', desc: 'Use the AMap API to create the Gaode map.Through iConnector, overlay the dot density thematic map created by iserver', oper: 'Click the button at the upper left corner to overlay the global dot density thematic map.' }

DemoDescription['leaflet']={title:'LeafLet Layer',desc:'Use the Leaflet API to create the OpenStreetMap map.Through iConnector, overlay the dot density thematic map created by iserver', oper: 'Click the button at the upper left corner to overlay dot density thematic map.' }
DemoDescription['mapBox']={title:'MapBox Layer',desc:'Use the MapBox API to create the OpenStreetMap map.Through iConnector, overlay the dot density thematic map created by iserver.Support IE10 above version.mapbox.js is developed based on leaflet, iConnector principle is the same', oper: 'Click the button at the upper left corner to overlay dot density thematic map.' }
DemoDescription['cartoDB']={title:'CartoDB Layer',desc:'Use the CartoDB API to create the OpenStreetMap map.Through iConnector, overlay the dot density thematic map created by iserver.CartoDB is developed based on leaflet, iConnector principle is the same', oper: 'Click the button at the upper left corner to overlay dot density thematic map.' }
DemoDescription['polymap']={title:'Polymaps Layer',desc:'Use the Polymaps API to create the map.Through iConnector, overlay the dot density thematic map created by iserver.Support IE9 above version', oper: 'Click the button at the upper left corner to overlay dot density thematic map.' }
DemoDescription['openLayers3']={title:'OpenLayers3',desc:'Use the OpenLayers3 API to create the OSM map.Through iConnector, overlay the ThemeUnique created by iserver', oper: 'Click the button at the upper left corner to overlay unique thematic map.' }
DemoDescription['bing']={title:'bing Layer',desc:'Use the bing API to create the bing map.Through iConnector, overlay the ThemeGraduatedSymbol created by iserver', oper: 'Click the button at the upper left corner to overlay unique thematic map.' }

DemoDescription['3tianditu'] = {title: 'Tianditu Layer', desc: 'Use the Tianditu API to create the layer and add to map.', oper: 'Click the icon to pop up the picture box.' }
DemoDescription['3baidu'] = {title: 'Baidu Layer', desc: 'Use the Baidu API to create the layer and add to map.', oper: 'If there is no cover state, click on the load data, if there is a cover state, can click to clear。' }
DemoDescription['3Siweidg']={title:'NavInfo Layer',desc:'Use the Siweituxin API to create the layer and add to map', oper: 'Click to draw (point, line, surface) button, it is can be drawn editing' }

DemoDescription['translation'] = {title: 'Zoom and Pan', desc: 'Definition: This sample is to show the interfaces of zoom in, zoom out, pan, which means perform zoom and pan operation on map without controls.', oper: 'Operate through clicking the button of zoom in, zoom out and pan.' }
DemoDescription['zoomRange'] = {title: 'Set Zoom Level', desc: 'Definition: This sample is to show how to set map zoom level, the initialized zoom level is 0 and there are 5 zoom levels in total.', oper: 'Zoom in or out by mouse wheel.' }
DemoDescription['coordinate transformation '] = {title: 'Coordinate Transformation', desc: 'Definition: This sample is to show the transformation between pixel coordinates and geographic coordinates.', oper: 'Click the map by mouse.' }
DemoDescription['mapevent'] = {title: 'Map Event', desc: 'Definition: This sample is to show the click event of map.', oper: 'Click the map by mouse.' }
DemoDescription['toggleMaps'] = {title:'Switch Base Map',desc:'Two maps (base maps) are switched to display.', oper: 'Click Toggle Map to display the WorldMap_Night and WorldMap_Day.'}

//Cover
DemoDescription['basicalGeometry'] = {title: 'Basic Vector Graph', desc: 'This example shows the basic vector graph, such as point, line, rectangle, bezier curve, polygon and circle.', oper: 'Click the Load Data button to display the basic vector graphs on vector layer; Click the Remove Data to remove all graphs. The data has been loaded when initialization.' }
DemoDescription['basicalGeometry_label'] = {title: 'Vector Layer With Lable', desc: 'This example shows the vector layer with lable', oper: 'Click the Load Data button to display the vector layer with lable graph on vector layer; Click the Remove Data to remove all graphs. The data has been loaded when initialization.' }
DemoDescription['geometryGradient'] = {title: 'Vector Layer With Gradient Color', desc: 'This example shows the vector layer using gradient color', oper: 'Click the Load Data button to display the vector layer using gradient color on vector layer; Click the Remove Data to remove all graphs. The data has been loaded when initialization.' }
DemoDescription['vectorEvent'] = {title: 'Vector Layer Event', desc: 'This example shows the simple events supported by vector layer. The click event of selectFeature control has been added for popping up a simple message box.', oper: 'Cick the Load data button. Then click the object to trigger the event. A simple message box will pop up.' }
DemoDescription['createBLine'] = {title: 'B-spline Curve', desc: 'B-spline curve is a curve got from a set of control points. This curve will go through all points.', oper: 'Click the Draw Point Set button, and draw the point on the map. Then Click the Create B-spline Curve button.' }
DemoDescription['chinaTelecomSymbol'] = {title: 'Telecom Symbols', desc: 'This example shows the clover rendering. The dark color of two layers clover represents the GSM900 co-sites. The light color represents 1800 co-sites. The first layer of three layer clover represents the frequency point α. Second layer represents β, and the third layer represents γ.', oper: 'Click the Mark Professional Symbol button to load the telecom professional symbols to the map. 1. There are 10 million nodes in clover; 2. The clover can be customized on the front end, and interactive on both ends. 3.The clover has multiple frequency points, and the angle can be different; 4. The clover can be selected; 5. It can see the adjacent regions through the connection.'}
DemoDescription['mRegion'] = {title: 'Island and Multi-polygons', desc: 'his example shows the pilot polygon and multi-faceted create effect.', oper: 'Click the heading polygon and multi load data increase'}
DemoDescription['marker'] = {title: 'Mark Layer', desc: 'Maker the coverings and map points. You can customize to select the mark label. It needs to add to the Markers layer to display.', oper: 'None'}
DemoDescription['markerEvent'] = {title: 'Selectable Event of Marker Layer', desc: 'This example shows the simple events supported by vector layer. The click event has been added to the marker for popping up a simple message box.', oper: 'Cick the Load Data button. Then click the object to trigger the event. Click the Marker icon to pop up the simple message box.' }

 //Control
DemoDescription['zoom'] = {title: 'Zoom Control', desc: 'Definition: This sample is to show the zoom control constructed with "+" button and "-" button. It will be placed on the left-upper corner of the map.', oper: 'Click "+" button to zoom in, or click "-" button to zoom out.' }
DemoDescription['panzoombar'] = {title: 'Pan Zoom Bar', desc: 'Definition: This sample is to show the pan zoom bar constructed by compass, slider, "+" button and "-" button. It is used to pan or zoom the map, will be placed on the left-upper corner by default.', oper: 'Click "+" to zoom in. Click "-" to zoom out. Drag the slider to change map zoom scale. Click the direction button of compass to pan the map or click the middle to view the entire map.' }
DemoDescription['zoomBox'] = {title: 'Rectangle Zoom', desc: 'Zoom the map by drawing rectangle. The zoom operation is only valid when pressing one button on keyboard and draw rectangle by mouse. The button could be customized, the default one is Shift.', oper: 'Drag the mouse to draw rectangle with Shift button on the keyboard pressed.' }
DemoDescription['navigation'] = {title: 'Map Basic Operations', desc: 'Definition: This sample is to show the map browsing by mouse event. This control will be added by default if there is no control defined.', oper: 'The map layer could be dragged by mouse and moved out of the map. Left double click to zoom in and right double click to zoom out. Or press "Alt" and draw rectangle to zoom. The slider of mouse could also be used for zooming.' }
DemoDescription['layerswitcher'] = {title: 'Layer Manager', desc: 'Definition: Layer manager is used to control the visibility of the layers.', oper: 'Move the mouse to the right-upper corner of LayerSwitcher control to set the layer as visible or invisible.' }
DemoDescription['overviewmap'] = {title: 'Overview', desc: 'definition: This sample is to show the map eagle eye control.', oper: 'Click the overview icon to show or hide the overview window. The map in the overview window will updated when dragging the map.' }
DemoDescription['scaleline'] = {title: 'Scale', desc: 'Definition: This sample is to show the scale control. It will be placed on the left-bottom corner in default.', oper: 'Change with the zoom scale.' }
DemoDescription['attribution'] = {title: 'Copyright Control', desc: 'Definition: This sample is to show the property "attribution" of each layer on the map, which will be placed at the bottom right corner.', oper: 'Click to connect the attribution of layer.' }
DemoDescription['dragpan'] = {title: 'Map Drag', desc: 'Definition: This sample is to show panning map through dragging mouse. It is to realize the dynamic activation and log out by activate and deactivate.', oper: 'Click "Drag" to drag map by mouse, click "Cancel" to deactivate.' }
DemoDescription['geolocate'] = {title: 'Geo Location Control', desc: 'Geographical positioning control packaging the W3C geolocation interface, geolocation API standard defines access related equipment to provide location information programming interface and common sources of location information including global positioning system (GPS), and through the network signal such as IP address, RFID, WiFi and Bluetooth MAC address, and GSM / CDMA mobile phone ID inference. This paradigm is used in combination with map; it can respond to events when the location changes.', oper: 'n the release state, click on the "location" to locate your location. Does not support Firefox and Chrome' }
DemoDescription['changeControlsSkin'] = {title: 'Control Skin Switch', desc: 'Definition: This sample is to show skin switch for zoom control, layer manager, eage eye controls.', oper: 'Click button to switch.'}

DemoDescription['drawGeometry'] = {title: 'Drawing', desc: 'This example displays how to draw the point, line and region. It mainly uses DrawFeature.', oper: 'Click the Draw Point, Draw Line and Draw Region button.'}
DemoDescription['featureSnap'] = {title: 'Feature Edit', desc: 'This example shows how to eidt and snap features through the snap class and the ModifyFeature control. ', oper: 'Click Load data to add data to map. Click Switch to turn on or off the snapping. After turning of snapping using the Switch button, click the feature to edit feature under snapping mode.'}
DemoDescription['distanceMeasure'] = {title: 'Distance Measurement', desc: 'Distance measurement. Set the attribute measureMode of MeasureService as SuperMap.REST.MeasureMode.DISTANCE. Measure the distance of the current line. The unit is meters.', oper: 'Click the Distance Measurement button, and draw the line feature on the map to show the result of distance measurement. Click the Clear button to remove the current line feature.' }
DemoDescription['areaMeasure'] = {title: 'Area Measurement', desc: 'Area Measurement. Set the measureMode attribute of MeasureService as SuperMap.REST.MeasureMode.AREA. Measure the area of current polygon. The unit is square meters.', oper: 'Click the Area Measurement button to draw the region feature to show the result of are measurement. Click the Clear button to remove the current region feature.' }
DemoDescription['dragFeature'] = {title: 'Feature Drag', desc: 'Definition: The feature drag control, drag or move the features by mouse drag.', oper: 'Click "Drag" to drag the features on the map.' }

//Information bax
DemoDescription['simplePopup'] = {title: 'Simple Messagebox', desc: 'Definition: The pop-up window control, which is to show the information of features in a pop-up window.', oper: 'After closing the pop-up window, the window will show again when clicking the features and the position will not be changed.' }
DemoDescription['anchored'] = {title: 'Self-adaption Messagebox', desc: 'Definition: Self-adaption messagebox, which can be self-adapted for displaying around a specified position.', oper: 'Zoom the map and the messagebox will be shown on one of the directions of a specified position.' }
DemoDescription['popup'] = {title: 'Custom Messagebox', desc: 'Definition: Messagebox control, which is to show the information of features in a independent window.', oper: 'The messagebox will be shown when clicking the features. Click "Set Background Color" to change the background color. Click "Modify Background" to change the transparency.' }
DemoDescription['shadowPopup'] = {title: 'General Messagebox', desc: 'Definition: Pop-up window with direction and frame. It can display information of features in a independent window.', oper: 'Click feature to show the pop-up window.' }

//Query
DemoDescription['queryByBounds'] = {title: 'Query by Bounds', desc: 'Definition: Perform Bounds query for the map layer, query the spatial feature information within specific extent in one or more layers. Bounds query is like Geometry query, the difference is the extent specified by Bounds query is Bounds and not Geometry information, it is more convenient than Geometry query.', oper: '1. Click "Query" button, click in the map, drag and release, finish adding the rectangle, query and display the capitals within the rectangle; 2. Click "Remove" button, remove the current result.' }
DemoDescription['queryByDistance'] = {title: 'Query by Distance', desc: 'Definition: Query by distance is query the features that meet specific conditions within a specific extent, for point geometry, it queries the features that are within the distance to the point; For line and region geometry object, query the feature within the distance to the border.', oper: '1. The marker in the map represent Shanghai (Used to query geometry); 2. Click "Query" button, query and display the capitals that are within 30 map units to Shanghai; 3. Click "Remove" button, remove the current result.' }
DemoDescription['queryByGeometry'] = {title: 'Geometry Query', desc: 'Definition: Geometry query for map layer, that is query the feature that meet certain spatial relation and conditions.', oper: '1. Click the "Point/Line/Rectangle/Circle/Polygon" button to add a geometry in the map in order to query and display the results (countries which contain the point/line and capitals which contains the Rectangle/Circle/Polygon); 2. Click "Remove" button to remove the current query result.' }
DemoDescription['queryBySQL'] = {title: 'SQL Query', desc: 'Definition: SQL Query for map is to query the feature that meet SQL conditions in the specified map layer. ', oper: '1. Click "Query" button, to perform SQL query (The query condition is: the countries with population larger than 1 billion, area larger than 9 million square kilometres); 2. Click "Remove" button to remove the current query result.' }
DemoDescription['vectorLayerRegionName'] = {title: 'Query Interaction', desc: 'Definition: The SQL Query for map, draw a mass of vector features with high performance vector rendering (canvas2).', oper: '1. Click "Query" button to query the 10,000 county towns, all the cities and all the provincial capitals in China, and draw them; 2. Click "Remove All" button to clear the current query result; 3. Click "Remove 1000" button to clear the front 1000 query result by the adding order; 4. Click "Remove Selection" button to clear the features selected currently; 5. Click "Start Edit" button; 6. Click "End Edit" button to close the editing function.' }
DemoDescription['getFeatureByIDs'] = {title: 'ID Query', desc: 'Definition: Dataset IDsQuery is to query the spatial element with the given ID in the dataset.', oper: '1. Click "Query" button to perform IDs dataset query, the ID of the query dataset ["World:Countries"] is [1,247]; 2. Click "Remove" button to remove the current query result.' }
DemoDescription['getFeatureByGeometry'] = {title: 'Geometry Query', desc: 'Definition: Query the vector elements that meet certain spatial relations with the given geometry object. The spatial relations includes CONTAIN, CROSS, DISJOINT, IDENTITY, INTERSECT, NONE, OVERLAP, TOUCH and WITHIN, this sample use the INTERSECT mode: SuperMap.REST.SpatialQueryMode.INTERSECT.', oper: '1. Click "Query" button and add geometry elements in the map (click to add node, double-click to end the adding, the length of the array must be larger than 3). 2. Query the countries intersect with the geometry element; 3. Click "Remove" button to remove the current query result.' }
DemoDescription['getFeatureByBuffer'] = {title: 'Buffer Query', desc: 'Definition: Create a buffer with certain distance, query the vector data intersect with the buffer area from the given datasets.', oper: '1. Click the element drawing (point/line/region) button and draw elements in the map, double-click to end the drawing and query, display the capitals within 30 degree form the element drawing (point/line/region); 2. Click "Remove" button to remove the query result.' }
DemoDescription['getFeatureBySQL'] = {title: 'SQL Query', desc: 'Definition: Perform SQL Query for dataset, is to query the vector elements that meet the SQL condition in the given datasets', oper: '1. Click "Query" button to perform SQL Query (the query condition is: "SMID =247"); 2. Click "Remove" button to remove the current query result.' }
DemoDescription['getFeatureByBounds'] = {title: 'Bounds Query', desc: 'Definition:Query for data bounds, that is, to find in the specified data for vector elements interacted with a range of the data.', oper: '1, click the "search" button to perform range queries; 2, click the "clear" button to remove the current query results' }
DemoDescription['editFeature'] = {title: 'Edit Feature', desc: 'Definition: Feature editing service class in data service, it is used to add, select, delete, modify feature based on the intersection of dataset and the server. Add, delete and modify operation uses the same EditFeaturesParameters class, EditFeaturesService class, EditEvent class and EditFeaturesResult class, and the selection operation has the independent parameter, service, event and result class. The purpose of the select operation is to get the geometry object on the server.', oper: '1. Click "New Geoobject" button and add polygon in the map to add feature. 2. Click "Select Geoobject" button to select features in the map, note: Before performing the editing and deleting operation, it is needed to perform the selection operation first. 3. Click "Select Geoobject" button to select the features to edit in the map, click "Edit Geoobject" button to edit the feature. 4. Click "Select Geoobject" button to select the features to remove, then click "Delete Geoobject" button to remove the feature.' }
DemoDescription['fieldStatistic'] = {title: 'Field Statistics', desc: 'Definition: Query all the attribute fields of the specified dataset', oper: '1. Query all the attribute fields of the specified dataset; 2. Do statistics on the specified field, such as calculating MEAN, Maximum value, etc.' }

 //Thematic map
DemoDescription['themeDotDensity'] = {title: 'Dot Density Map', desc: 'Definition: This type of map symbolizes features using dots drawn inside polygons to represent a quantity. Each dot represents a specific value. When creating a dot density map, you specify how many features each dot represents and how big the dots are depending on what pattern of map represented. You may need to try several combinations of amount and size to see which one best shows the pattern.', oper: '1. Click the Create button to create a density thematic map; 2. Click the Remove button to remove the density thematic map.' }
DemoDescription['themeGraduatedSymbol'] = {title: 'Graduated Symbols Map', desc: 'Definition: The graduated symbols map uses different shape, color and size of symbol to represent individual to show the numeric and quality features. Usually, using the shape, color and size of symbol to represent the particular attribute of features. The shape and color of symbol represents the quality feature and the size represents the numeric feature.', oper: '1. Create graduated symbols map for the area of all the provinces, the fiducial value is 3m square kilometres; 2. Click the Create button to create graduated symbols map; 3. Click the remove button to remove the current theme map.' }
DemoDescription['themeGraph'] = {title: 'Graph Map', desc: 'Definition: The graph map presents the information about thematic value by drawing the graph maps for each feature or record. The graph maps can be drawn from several thematic variables and reflect multi-attributes, that means you can draw several thematic values on a graph. Each value corresponds to an item.', oper: '1. This sample displays the growth rate of population in the Jingjin region between 1992 and 1999; 2. Click the Create button to see the histogram showing the growth rate of population (the blue histogram show the growth rate of population between 1992 and 1995, the pink histogram show the growth rate of population between 1995 and 1999); 3. Click the Remove button to remove the current theme map.' }
DemoDescription['themeLabel'] = {title: 'Label Map', desc: 'Definition: The label map is used to label points, lines, regions and other objects by thematic values. We often use text or numeric fields to label features on the map, such as roads, rivers, etc. It should be noted that some elements will appear on the map, such as the legend, the title, the scale, etc. Those are all cartographic elements, not labels.', oper: '1. This sample displays creating label map according to the name and population of the capitals; 2. Click the Create button to see the label map of the capitals; 3. Click the Remove button to remove the current theme map.' }
DemoDescription['themeRange'] = {title: 'Ranges Map', desc: 'Definition: In the ranges map, thematic values are divided into multiple ranges with a certain classification method (range mode). Features whose thematic values are within the same range are displayd in the same style. The thematic variable of the ranges map must be of numeric type. The ranges map is often used to represent the quantity or degree features of the features that are continuously distributed, such as precipitation distribution, soil erosion intensity distribution, etc.', oper: '1. This sample displays the ranges map created by the area of the provinces (The provinces whose area are between 0 and 0.5 m square kilometres are show in green, the provinces whose area are between 0.5 m and 1 m square kilometres are show in yellow, the provinces whose area are between 1 m and 3 m square kilometres are show in dusty blue; 2. Click "Create thematic map" button to see the provice area map 3. Click "Remvoe thematic map" button to remove the current thematic map.' }
DemoDescription['themeGridRange'] = {title: 'Grid Range Map', desc: 'The grid range thematic map is to segment values of all the cells into several segments according to a segmenting method. Cells in a certain segment use a same color. The grid range thematic map is commonly used to display the number or degree characteristics of continuous distribution. For example, a national annual rainfall distribution map displays the raster data by segmentation, which are generated by interpolating observations of all the meteorological stations. This class is similar with the range thematic map class, and the difference is that the operated objects of range thematic map are vector data whereas the operated objects of the grid range thematic map are grid data.', oper: '1. This sample shows a grid range thematic map created by Jingjin Terrain Map (this sample is divided into 6 segments according to elevation of each location, which corresponds to distinct color); 2. Click "Create" to display the Jingjin terrain range thematic map; 3. Click "Remove" to clear the current thematic map.' }
DemoDescription['themeUnique'] = {title: 'Unique Value Map', desc: 'In a unique values map, the features with the same thematic values will be grouped together, and a display style is set for every group, each group is a subitem of unique values map.', oper: '1. This sample shows creating unique values map according to China administrative division map; 2. Click the Create button, you can see the unique values map; 3. Click the Remove button to remove the current theme map.' }
DemoDescription['themeGridUnique'] = {title: 'Grid Unique Value Map', desc: 'The grid unique value map is generated by classify cells into several classes and then set a color for each class in order to distinguish different classes.', oper: '1. Click the Create button to create the grid unique values map. 2. Click the Remove button to remove the grid unique values map.'}
DemoDescription['themeLabelLayer'] = {title: 'Label Map Layer', desc: 'Definition: This example queries capital dataset through SQL statement and then render the capitals of countries in vector layer through the Strategy.GeoText strategy. This example uses label styles for grouping according to the population of capitals. The more population the capital has, the bigger the label, the brighter the color.', oper: 'Click Add Label to highlight country capitals on the map. Click Clear to remove labels. Click label to view the population information for the capital.' }
DemoDescription['ctl_landuseUnique'] = {title: 'Unique Value Map', desc: 'Definition: 1. This example display use of the client unique thematic layers, query obtained data (data also can be in the client is constructed) on the client side of unique thematic rendering, the thematic map reaction of Beijing and Tianjin area of land use type distribution. 2 this example shows the interaction between the event and the thematic elements.', oper: 'Click on the "add feature layer" to create a thematic map; click "clear" to empty the thematic layer.' }
DemoDescription['themePM2_5'] = {title: 'Air Quality Index(AQI)', desc: 'Definition: this example shows the 2015-03-25-14:00:00 air quality index and related information in most cities in China. Example using the client tag thematic map, the city AQI value as the content of the label, the greater the value of the city tag font', oper: 'Click on the "add feature layer" to create a thematic map; click "clear" to empty the thematic layer.' }
DemoDescription['ctl_popDensityRange'] = {title: 'Ranges Map', desc: 'Definition: 1. This example shows client segmentation, use of the thematic layers and query obtained data (data also can be in the client is constructed) on the client side of subsection thematic rendering, the special reaction of Beijing and Tianjin area population density spatial characteristics. 2 this example shows the method of direct updating of data in the client side to re render the thematic map.3,This example shows the interaction between the event and the event elements..', oper: 'Click on the "add feature layer" to create a thematic map;Click "update data" to modify the data (randomly generated data values) and re generate thematic maps; click "clear" to empty the thematic layer.' }
DemoDescription['ctl_worldCapitalsGraphBar'] = {title: 'Capital population of the world', desc: 'Definition: 1. This example show client statistics thematic layer of foundation, the query obtain capital of the world population data (this example shows only the population number > 100 million capital city) in client statistic thematic map making. 3 this example shows the interaction between the event and the thematic elements.', oper: 'Click on the "add feature layer" to create a thematic map; click "clear" to empty the thematic layer.Click on the column in the chart to locate the related geo information to the center of the map and display the population information of the capital city.' }
DemoDescription['ctl_GraphBar'] = {title: 'Bar Graph', desc: 'Definition: 1. This example shows, use of the client statistical thematic map - based bar and diaplay the residents consumption level from 2009 to 2013 of provincial-level administrative in China through the bar graph (data source: National Bureau of statistics http://data.stats.gov.cn/). 2 this example achieve the interaction with the thematic elements by events, display data information.', oper: 'Click on the "add feature layer" to create a thematic map; click "clear" to empty the thematic layer.Move the mouse to the chart to view data information.' }
DemoDescription['ctl_GraphLine'] = {title: 'Line Graph', desc: 'Definition: 1. This example shows, use of the client statistical thematic map - based line and diaplay the residents consumption level from 2009 to 2013 of provincial-level administrative in China through the line graph (data source: National Bureau of statistics http://data.stats.gov.cn/). 2 this example achieve the interaction with the thematic elements by events, display data information.', oper: 'Click on the "add feature layer" to create a thematic map; click "clear" to empty the thematic layer.Move the mouse to the chart to view data information.' }
DemoDescription['ctl_GraphPie'] = {title: 'Pie Graph', desc: 'Definition: 1. This example shows, use of the client statistical thematic map - based pie and diaplay the residents consumption level from 2009 to 2013 of provincial-level administrative in China through the pie graph (data source: National Bureau of statistics http://data.stats.gov.cn/). 2 this example achieve the interaction with the thematic elements by events, display data information.', oper: 'Click on the "add feature layer" to create a thematic map; The button "bright fill" and "bright strokes" and "original style" can quickly modify the chart style;click "clear" to empty the thematic layer.Move the mouse to the chart to view data information.' }
DemoDescription['ctl_GraphBar3D'] = {title: '3D Bar Graph', desc: 'Definition: 1. This example shows, use of the client statistical thematic map - based 3D bar and diaplay the residents consumption level from 2009 to 2013 of provincial-level administrative in China through the 3D bar graph (data source: National Bureau of statistics http://data.stats.gov.cn/). 2 this example achieve the interaction with the thematic elements by events, display data information.', oper: 'Click on the "add feature layer" to create a thematic map; click "clear" to empty the thematic layer.Move the mouse to the chart to view data information.' }
DemoDescription['ctl_GraphPoint'] = {title: 'Point Graph', desc: 'Definition: 1. This example shows, use of the client statistical thematic map - based point and diaplay the residents consumption level from 2009 to 2013 of provincial-level administrative in China through the point graph (data source: National Bureau of statistics http://data.stats.gov.cn/). 2 this example achieve the interaction with the thematic elements by events, display data information.', oper: 'Click on the "add feature layer" to create a thematic map; click "clear" to empty the thematic layer.Move the mouse to the chart to view data information.' }
DemoDescription['ctl_GraphRing'] = {title: 'Ring Graph', desc: 'Definition: 1. This example shows, use of the client statistical thematic map - based ring and diaplay the residents consumption level from 2009 to 2013 of provincial-level administrative in China through the ring graph (data source: National Bureau of statistics http://data.stats.gov.cn/). 2 this example achieve the interaction with the thematic elements by events, display data information.', oper: 'Click on the "add feature layer" to create a thematic map; The button "bright fill" and "bright strokes" and "original style" can quickly modify the chart style;click "clear" to empty the thematic layer.Move the mouse to the chart to view data information.' }
DemoDescription['ctl_jingjinPopGraph'] = {title: 'Statistical graph switching', desc: 'Definition: 1. This example shows client statistical chart chart switching function, client statistical chart design, the data-driven visualization strategy, in the same thematic layer with different chart types for data display can be of the same data.', oper: 'Click the "add thematic map making thematic map; button" switch to histogram ", switching line chart", "switch pie" can fast switching chart type;Click "update data" to modify the data (randomly generated data values,the data does not have the reference value, only uses the chart effect display) and re generate thematic maps; click "clear" to empty the thematic layer.Move the mouse to the chart to view data information.' }
DemoDescription['ctl_RankSymbol'] = {title: 'Graduated Symbols Map', desc: 'Definition: 1. This example shows client graduatd symbols map--basic circle symobl usage. Symbol size indicates the levels of consumption for provinces of China in 2009 (Data source: http://data.stats.gov.cn/. 2. This example displays data through the interaction with thematic features via events.', oper: 'Click Add Thematic Map to create thematic map, click clear to clear the thematic map layer; when you move your mouse to the graph, you can check the information.'}

//Analysis
DemoDescription['bufferAnalyst'] = {title: 'Buffer Analysis 1', desc: 'Definition: Buffer analyst is the fundamental spatial analyst in GIS. Buffer zone is the construction of area features by extending outward from point, line, or polygon features over a specified distance. Buffer analyst can be used in many fields, such as a power wire has a five meters dangerous zone around it, you can create a buffer on map for this wire to indicate this dangerous zone.', oper: '1. The blue line feature in the map is Tuanjielu; 2. Click "Buffer Analysis" button, to perform a round end buffer analysis with a radius as 10 meters, the orange area displayed is the extent after the road is broadened; 3. Click "Remove Result" button to remove the current analysis result.' }
DemoDescription['bufferQuery'] = {title: 'Buffer Analysis 2', desc: 'This case is to generate a history trace on gps signal points, do analysis on areas that signals affect, and then query and display factories affected by these signals.', oper: '1. Dots in the map denote gps signal sampling points; 2. Click "Generate Path" to generate a history track; 3. Click "Buffer Analysis" to do buffer analysis on the route generated by gps points; 4. Click "Query" to query and analyze factories impacted by gps signals; 5. Click "Remove Result" to remove all the results.' }
DemoDescription['thiessenAnalyst'] = {title: 'Thiessen Analysis', desc: 'This example shows the use of iServer proximity analysis, the method of neighboring analysis to achieve the establishment of the Tyson polygon. Based on the data set of the plant distribution in Changchun City, the Tyson polygon is established, and the proximity between the points is obtained.', oper: 'Click the "dataset Tyson polygon" button to view the Tyson polygon generated by factory dataset ,Click the button to view the geometric Tyson polygon according to the geometric point generating Tyson polygon, click the "remove layer" to delete Tyson polygon.'}
DemoDescription['overlayAnalystService'] = {title: 'Overlay Analysis', desc:'Definition: Overlay analysis is a group of methodologies applied in optimal site selection or suitability modelling. It is a technique for applying a common scale of values to diverse and dissimilar inputs to create an integrated analysis. This analysis supports Clip, Erase, Identity, Intersect, Symmetrical difference, Union and Update. The overlay analysis in SupeMap includes three datasets: The first dataset is a source dataset, besides it must be an area dataset for Union and Symmetrical difference, the other operations can be any dataset of point/line/area/CAD dataset/route dataset; the second one is an overlay dataset which must be an area dataset; the third one is an overlay result dataset used for saving results of overlay analysis.', oper: '1. Take UNION as an example, combine the Jingjin administrative regions and neighbor regions in order to perform UNION operation on two datasets; 2. Click "Overlay Analysis" to display the result of UNION (Blue area in the figure is the administrative area after UNION); 3. Click "Remove" to remove the current UNION results.'}
DemoDescription['surfaceAnalyst'] = {title: 'Surface Analysis', desc: 'Isoline is the mostly-commonly used method to represent a surface on a map. An isoline is a smooth curve formed by connecting adjacent points with the same values. Commonly-used isolines include: contours, depth contours, isotherms, isobars, and isohyet lines. The distribution of isolines reflects the change in the values on a surface. A dense isoline distribution indicates a dramatic change in the values on the surface. For example, a dense contour distribution indicates a steep slope. A sparse isoline distribution indicates a mild change in the values on the surface. For example, a sparse contour distribution indicates a gentle slope. Therefore, locations with the same elevations, temperatures, precipitations, etc., can be found through isoline extraction. At the same time, the distribution of isolines also reflects the steep and flat areas of change.', oper: '1. Green dots in the figure is the national temperature stations; select the area within (0,4010338), (1063524,4010338), (1063524,3150322) and (0,3150322); perform interpolation analysis on the temperature filed of this point dataset (SamplesP@Interpolation) to obtain a raster dataset; extract isolines from the raster dataset. 2. Click "Extract Contour", then the blue lines are isotherms; a dense isotherms indicates a steep difference. 3. Click "Remove" to remove the current results.' }
DemoDescription['dynamicSegmentation'] = {title: 'Dynamic Segmentation', desc: 'Dynamic segmentation is a process for dynamically displaying linear reference features, and an application for linear reference technology. Dynamic segmentation builds up the associated relations between any segment and corresponding attribute in the linear features without changing its spatial data structure. The real time road condition uses different colors to represent different road condition information, red represent traffic jam, yellow represent slow, green represent unimpeded.', oper: '1. Click "Dynamic Segmentation" button,  the dynamic segmentation real time road condition is displayed on the map; 2. Click "Remove" button to remove the current result.' }
DemoDescription['routeCalculateMeasure'] = {title: 'Points Locate Route', desc: 'Definition: Specify the M value from a point on the route to the start point', oper: 'A practical application scenario of "Points Locate Route" is to determine the distance from a point to the start point of a road when we know where the accident happens on the road.' }
DemoDescription['routeLocatorPoint'] = {title: 'Route Locates Points', desc: 'Definition: Specify a distance and label the corresponding point on the route', oper: 'The application scenario of "Route Locate Points" are in opposite with that of "Points Locate Route", such as when we know the distance from the accident to the start point of the route, and we need to know the coordinate of the accident.' }
DemoDescription['routeLocatorLine'] = {title: 'Route Locates Lines', desc: 'Definition: Specify the range of a line and label the line on the route', oper: 'An application scenario of "Route Locates line" is to determine the range of the line when we know there is a traffic jam on a part of the road' }
DemoDescription['interpolationAnalystByDensity'] = {title: 'Dot Density Interpolation Analysis', desc: 'Definition: Interpolation analysis can forecast the values around sampling points with the limited data, which can master overall distribution of data in the study area. So the discrete points of sampling data not only display the data location, but also reflects the numerical distribution of region.', oper: 'This example uses the dot density interpolation analysis. Click the Dot Density button to analyze, and show the result with ThemeGridRange.' }
DemoDescription['interpolationAnalystByIDW'] = {title: 'IDW Interpolation Analysis', desc: 'Definition: Interpolation analysis can forecast the values around sampling points with the limited data, which can master overall distribution of data in the study area. So the discrete points of sampling data not only display the data location, but also reflect the numerical distribution of region. ', oper: 'This example uses the IDW interpolation analysis. Click the IDW button to analyze, and show the result with ThemeGridRange.' }
DemoDescription['interpolationAnalystByKriging'] = {title: 'Kriging Interpolation Analysis', desc: 'Definition: Interpolation analysis can forecast the values around sampling points with the limited data, which can master overall distribution of data in the study area. So the discrete points of sampling data not only display the data location, but also reflect the numerical distribution of region. ', oper: 'This example uses the Kriging interpolation analysis. Click the Simple Kriging, Kriging and Universal Kriging buttons, and show the result with ThemeGridRange.' }
DemoDescription['interpolationAnalystByRBF'] = {title: 'RBF Interpolation Analysis', desc: 'Definition: Interpolation analysis can forecast the values around sampling points with the limited data, which can master overall distribution of data in the study area. So the discrete points of sampling data not only display the data location, but also reflect the numerical distribution of region.', oper: 'This example uses the RBF interpolation analysis. Click the RBF button to analyze, and show the result with ThemeGridRange.' }
DemoDescription['interpolationAnalystByGeometry'] = {title: 'Discrete Points Interpolation Analysis', desc: 'Definition:Interpolation analysis helps get the grid dataset from discrete points through interpolation. Generating a grid dataset for a region by interpolating sample point data is in fact a process of rasterizing the data for that region according to a given grid size (resolution). Each cell in the grid dataset corresponds to an area on ground. The value of each cell is calculated using the values of the neighboring sample points. By doing this, the values around sample point locations can be predicted to reveal the value distribution over the entire region. Common interpolation methods include Dot Density Interpolation method, Inverse Distance Weighted method, Kriging method, RBF (Radial Basis Function) method, etc.', oper: 'This sample use the geometry interpolation to do interpolation analysis on the geometry. Currently, only IDW supports geometry.' }
DemoDescription['terrainCurvatureCalculation'] = {title: 'Terrain Curvature Calculation', desc: 'This example shows the use of iServer Terrain Curvature Calculation resources.Example using the terrain data of Jingjin to calculate the average curvature of the Jingjin region，and presents the results of datasets by grid thematic map in client', oper: 'Click on the "terrain curvature" button to view grid thematic map by the results of the data set generated, click the "remove the results layer" TO remove the grid thematic map.'}
DemoDescription['mathExpression'] = {title: 'Grid Math Expression', desc: 'This example shows the use of iServer grid computing expression resources.The value of all grid cells in the raster dataset JingjinTerrain is increased by 600, and presents the results of datasets by grid thematic map in client', oper: 'Click on the "Grid Math Expression" button to view grid thematic map by the results of the data set generated, click the "remove the results layer" TO remove the grid thematic map.'}
DemoDescription['densityKernelAnalyst'] = {title: 'Density Kernel Analyst', desc: 'This example shows the use of iServer Density Kernel Analyst resources.The density analysis of a regional railway distribution in Changchun city is carried out,and presents the results of datasets by grid thematic map in client', oper: 'Click on the "Density Kernel Analyst" button to view grid thematic map by the results of the data set generated, click the "remove the results layer" TO remove the grid thematic map.'}

DemoDescription['closestFacilities'] = {title: 'Find Closest Facility', desc: 'Definition: This method is used to find closest facility with specified parameters.', oper: '1. The markers in the map represent the hospitals (facility points); 2. Click "Event points" button, than select a event point in the map; 3. Click "Submit" button to query the closest hospital; 4. Click "Remove" button, to remove the currently selected event point and the analysis result.' }
DemoDescription['findLocation'] = {title: 'Location-Allocation', desc: 'Definition: The location-allocation analysis is to decide the optimal or the best location for one or more facilities to be built. The analysis aims at providing services and commodities in the most efficient way. The location-allocation analysis is not only the location process, but also including allocating the demand of the demand points to the service areas of the new facilities. That is way it is called location-allocation analysis.', oper: '1. Click "Analyze" button to perform find location analysis (In this sample, set the number of centers expected to used as the final facility location); 2. Click "Remove" button to remove the current analysis result.' }
DemoDescription['findMTSPPaths'] = {title: 'MTSP Analysis', desc: 'Definition: The multi-traveling salesman analysis is also called the logistics and distribution, referring to in the network data set, given M distribution centers and N distribution destinations (M, N are integers greater than zero), and finds the cost-effective distribution path, and gives the corresponding route. The function of the logistic distribution is to solve the problem that how to reasonably distribute the distribution order and the delivery route to get the minimum distribution total cost or the minimum cost of each distribution center.', oper: '1. The markers in the map represent the newspaper delivery center; 2. Click "Destination" button and select several newsstand in the map; 3. Click "Submit" button to perform the delivery path analysis; 4. Click "Remove" button to remove the current delivery target and the analysis result.' }
DemoDescription['findMTSPPathsAndTSPPaths'] = {title: 'MTSP Analysis (Application)', desc: 'Definition: Multiple travelling salesman problem (MTSP) is a generalization of the well-known traveling salesman problem (TSP), where more than one salesman is allowed to be used in the solution. MTSP is to find the shortest delivery route from M points of origins to N points of destinations (M and N are integers greater than 0). Traveling salesman problem (TSP) analysis is unordered path analysis. The TSP analysis can decide the order to visit the nodes, and its target is to get the minimum (or close to the minimum) sum of the travel-route impedances. For example, a food factory distributes goods into user-specified retail stations from warehouses, and suggest the least cost route to the quality inspector.', oper: '1. The labeled icons in the figure are the warehouses of a food factory. 2. Click "Destination" and then select multiple retail stations (destinations). 3. Click "Logistics" to perform the MTSP analysis. 4. Click "Quality Verification" to perform the TSP analysis and get least cost route. 5. Click "Remove" to remove the current result.'}
DemoDescription['findPath'] = {title: 'Optimal Path Analysis', desc: 'Definition: Path Finding is to find the way which has the least impedance to get from one point to another, the result path will visit the points in the specified order if there are more than two points to visit. The image below is a result of a Path Finding analysis: For example, to find a path for visiting Point 1, Point 2, Point 3, and Point 4 in order, the paths with the least impedance between Point 1 and Point 2, Point 2 and Point 3, Point 3 and Point 4 have to be determined respectively. The "impedance" in path analysis may refer to any thing such as travel time, distance, financial cost, toll stations, etc. Finding the path with the shortest distance is the most simple path analysis.', oper: '1. Click "Select Points" button and select the nodes to pass in the map; 2. Click "Submit" button to display the best path between the two points; 3. Click "Remove" button to remove the current selected stops and the analysis result.' }
DemoDescription['findTSPPaths'] = {title: 'TSP Analysis', desc: 'Definition: Traveling salesmen problem analysis (TSP) is to find the path passing a series of specified nodes. The TSP is an unordered path analysis. The Traveling salesmen can determine the order of accessing the nodes for themselves, in order to get the minimum impedance (or close to the minimum) of the traveling path. In TSP, if the end point has been specified, the end point must be the last one to be accessed by the traveling salesmen, and the order of accessing other points can be flexible.', oper: '1. Click "Select Points" button and select the nodes to pass in the map; 2. Click "Submit" button to perform the analysis; 3. Click "Remove" button to remove the current selected stops and the analysis result.' }
DemoDescription['serviceAreas'] = {title: 'Service Area Analysis', desc: 'Definition: Service Area Analysis is to determine the area that can be served by a service site based on specified criteria. You can specify the service sites by selecting nodes on the network. The maximum distance that can be served by a service site is the service radius and the farthest points that can be served are called service extremities. The service area resulting from the service analysis is formed by connecting these service extremities.', oper: '1. Click "Center" button and select the service center you want to analysis; 2. Click "Submit" button to perform service area analysis, perform buffer analysis with service radius as 500, 600, 700...; 3. Click "Remove" button to remove the current service center and analysis result.' }
DemoDescription['trafficTransfer'] = {title: 'Traffic Transfer', desc: 'Definition: Input any start point and end point, the bus transfer system and find the transfer scheme with the given constraint condition.', oper: '1. Input the start location to query, all the stops near the start location will be find in the start stop text box, select the appropriate stop, and select the appropriate end stop in the end stop text box; 2. Click "Transfer Method" button to query.' }

//Visualization
DemoDescription['heatmapLayer'] = {title: 'Heat Map', desc: 'Definition: display the information of heat map', oper:'1. Set the number of heat points and the size of radius; select a unit for the radius of heat points including two units which are px and degree; click Render Heat Point to view the display effect; 2. Click Remove to delete heat points' }
DemoDescription['heatmapColorSection'] = {title: 'Heat Map color segmentation', desc: 'Definition:Display the information of heat map,and you can quickly see the color gradient within the temperature range.', oper:'1, set the number and size of hot spots, and choose hot radius units, it provides PX and degree two, click view rendering effect; 2, click Delete clear hot.' }
DemoDescription['heatmapColorManual'] = {title: 'Heat Map color segmentation', desc: 'Definition:Display the information of heat map,and you Can change the color gradient range', oper:'1, set the number and size of heat spots, and choose hot radius units, it provides PX and degree two, click view rendering effect; 2, click Delete clear hot.3, click the "color image" can load the color value, click the render view effect.' }
DemoDescription['heatGridLayer'] = {title: 'Heat Grid Map', desc: 'Definition: Heat grid layer. The combination of heat map and aggregation, which emphasizes the heat and number. Usually used to display the temperature and altitude.', oper: '1. The data range and style of grid is set by grid array items; 2. Acording to different labelMode, the grid label can display the data count, average, maximum and minimum of current grid.'}
DemoDescription['clusterLayer'] = {title: 'Cluster Layer', desc: 'Definition: It can display massive point data in a clustering way. When there are a lot of points, and they are dense. It can aggregates the points in a certain range to a large point. This aggregation reflects the quantity and locations of these points. When zoom in the map, the aggregation point will disperse into small points.', oper: 'The aggregation point will be dispersed when zoom in the map. And the interesting will be aggregated when zoom out the map. Clicking the aggregation point will be dispersed into interesting points. There is a message box when clicking the interesting point. ' }
DemoDescription['utfGridLayer'] = {title: 'UTFGrid Layer', desc: 'Definition: Solve the interaction problem of massive data with UTFGrid layer', oper: 'UTFGrid layer is a special layer, unlike other layers that are visible, which loads the corresponding tiled data into memory to realize the rapid interaction of massive data.'}
DemoDescription['utfGridLayerFlags'] = {title: 'UTFGrid World Flag', desc: 'Definition: Rapidly response the users mouse events through UTFGrid layer, and display the national flag',oper:'When the mouse moves to a conutry, the top left corner will show the corresponding flag.' }
DemoDescription['gois'] = {title: 'Pit map', desc: 'Definition: Pit map. The solution for the rendering of large data. The case renders the national town data, about 30000', oper: 'Click Render to create and render a pit map; click Remove to remove the pit map' }
DemoDescription['elements'] = {title: 'Elements Layer Extension', desc: 'Definition: Use Elements to add user-defined Dom. This example adds a picture and realizes the synchronous scaling and zooming of picture and map. This example demonstrates the basic usage of Elements, including adding user-defined Dom (third party Dom is also ok) to map, zooming and scaling Dom with map.', oper: 'Zoom and scale the map. At the same time, please observe the position, size and transparency of the picture.' }

DemoDescription['animatorBase'] = {title: 'Base Render', desc: 'This example is used to demonstrate point, line, and region positin and shape change. Exsiting data is for two time nodes, data for intermediate time nodes are acquired through interpolation.', oper: 'Click Play and Pause to control the animation.' }
DemoDescription['animatorPoint'] = {title: 'Point Gradient', desc: 'This example is used to demonstrate point position change. Data is generated randomely.', oper: 'Click Play and Pause to control the animation.' }
DemoDescription['animatorLine'] = {title: 'Line Gradient', desc: 'This example is used to demonstrate line position and shape change', oper: 'Click Play and Pause to control the animation.' }
DemoDescription['animatorPolygon'] = {title: 'Region Gradient', desc: 'This example is used to demonstrate region position and shape change', oper: 'Click Play and Pause to control the animation.' }
DemoDescription['animatorTrain'] = {title: 'Train Monitoring', desc: 'Definition: This example monitors running situtaion of trains for some cities in China for a certain day from 0:00 to 24:00. Green color represents short-trip trains and red color represents long-trip trains.', oper: 'Click corresponidng buttons to control the animation and twinkling and tail effects.' }
DemoDescription['animatorCar'] = {title: 'Bus Monitoring', desc: 'Definition: This example monitors the status of part of cars in Changchun city for a certain period of time.', oper: 'Firstly, the vehicle needs to be queried and then youc an use Start, Pause, and Stop buttons to control the animation.' }
DemoDescription['animatorMetro'] = {title: 'Subway Building Simulation', desc: 'This example is used to demonstrate line extending effect, which monitors the building of Beijing subway.', oper: 'Click Play and Pause to control the animation. Meanwhile, base map can be displayed or hidden. Click the corresponding subway station can view the detailed information.' }
DemoDescription['animatorMetro2'] = {title: 'Subway Building Simulation 2', desc: 'This example is used to demonstrate line extending effect, which monitors the building of Beijing subway.', oper: 'Click Play and Pause to control the animation. Meanwhile, base map can be displayed or hidden. Click the corresponding subway station can view the detailed information.' }
DemoDescription['animatorWeatherMonitor'] = {title: 'Meteorology Monitoring', desc: 'Definition: Get isosurface information for temperature (local data is used). Instant listening is realized through vector animation rendering for client side dynamic display.', oper: 'Click Play and Pause to control the animation.' }
DemoDescription['animatorMigrate'] = {title: 'Spring Festival Travel Simulation', desc: 'This example is used to demonstrate line data migration, which monitors personel flowing in and out during the Spring Festival.', oper: 'Click Play and Pause to control the animation.' }

DemoDescription['tiledVectorLayer'] = {title: 'Tiled Vector Map', desc: 'Definition: Tiled vector map, visits the vector data of the server published by tile format. And rapidly rendering on the client', oper: '' }
DemoDescription['cartoCSS_point'] = {title: 'Point', desc: 'Definition: The CartoCSS symbol system on the front end. Display the point symbols. Users can customize the point symbols through CartoCSS', oper: 'None' }
DemoDescription['cartoCSS_line'] = {title: 'Line', desc: 'Definition: The CartoCSS symbol system on the front end. Display the line symbols. Users can set the color, width, shape and pattern of dotted line of line symbols through CartoCSS. This example simulate the railway symbol through the CartoCSS style.', oper: 'None' }
DemoDescription['cartoCSS_polygon'] = {title: 'Region', desc: 'Definition: The CartoCSS symbol system on the front end. Display the region symbols. Users can set the color, border and so on of region symbols through CartoCSS.', oper: 'None' }
DemoDescription['cartoCSS_text'] = {title: 'Text', desc: 'Definition: The CartoCSS symbol system on the front end. Display the text symbols. Users can set the font and color of text symbols through CartoCSS.', oper: 'None' }
DemoDescription['cartoCSS_hightlight'] = {title: 'Highlight', desc: 'Definition: The CartoCSS symbol system on the front end. Hightlight the mouse clicking and moving. Through the hover or click picker in CartoCSS, users can easy to customize the highlight symbols. ', oper: 'Click the Antarctica on WorldMap, you can see that the feature are highlighted whose ID are less than 10. If you click other country (except China), it is also highlighted. When the mouse moves to the text of continents, the text are highlighted.' }
DemoDescription['cartoCSS_edit'] = {title: 'CartoCSS Editing', desc: 'Definition: The CartoCSS symbol system on the front end. Users can input the CartoCSS style in the edit box. Through the selector and setting CartoCSS style to define a layer style symbol, it can recreate the map rendering style.', oper: 'Input the right CartoCSS style table, or modify the original CartoCSS, such as color, line width and so on to redefine the map style.' }
DemoDescription['cartoCSS_boundryStyle'] = {title: 'Strong Border Style', desc: 'Definition: Make the strong border map through map style list CartoCSS', oper: 'None' }
DemoDescription['cartoCSS_darkblueStyle'] = {title: 'Night Blue-Black Map', desc: 'Definition: This example uses CartoCSS to configure map with dark blue style.', oper: 'None' }
DemoDescription['cartoCSS_naturalStyle'] = {title: 'Elegant Green Map', desc: 'Definition: This example uses CartoCSS to configure map with natural style.', oper: 'None' }
DemoDescription['cartoCSS_nightStyle'] = {title: 'Moonlight Night Map', desc: 'Definition: This example uses CartoCSS to configure map with night style.', oper: 'None' }
DemoDescription['cartoCSS_helloKitty'] = {title: 'helloKitty style', desc: 'Definition: This example uses CartoCSS to configure map with helloKitty style', oper: 'None'}

//OGC
DemoDescription['wmtsLayer'] = {title: 'WMTS Layer', desc: 'Definition: Use WMTS layer, you can visit the layer service based on the OGC WMTS 1.0.0, including the third party WMTS service except iserver. WMTS is the first standard that support REST proposed by OGC, the current version is 1.0.0, it support 3 kinds of request modes: HTTP KVP (Key-Value Pair), SOAP and REST. Note: WMTS docks more service, it requires the user to set the parameters needed for output the image: matrixIds, resolutions, layer, matrixSet, url, etc. MatrixIds and resolutions can be defferent according to the standard scale of the service and output.', oper: 'None' }
DemoDescription['wcs'] = {title: 'WCS Layer', desc: 'Definition: WCS supports mutual exchange of online geospatical data which is the "cover" of geographical locations and features. It returns the static map through filtering and representing spatial data (The server is displayed by figures)', oper: 'None' }
DemoDescription['wms'] = {title: 'WMS Layer', desc: ' WMS（Web Map Service）service，The service conforms to the OGC (open geographic information union) to develop the WMS implementation specification.WMS makes use of the geography data to make map , which is defined as the representation of the geographic data. Now supports WMS version for "1.1.1" and "1.3.0”，This paradigm provides two types of projection systems (4326 and 3857) and two WMS versions that can be switched with each other.', oper: 'Modify the map by switching to a different projection and version.'}
DemoDescription['kml'] = {title: 'KML Layer', desc: 'Definition: Add KML layer to map.', oper: 'Click Load button add KML layer.' }
DemoDescription['GeoJSON'] = {title: 'GeoJSON Data Display', desc: 'Definition: Displays data in GeoJSON format.', oper: 'None' }
DemoDescription['queryByWFS'] = {title: 'WFS Query', desc: 'Definition: Perform the GerFeature query on the map, and request the return of geoinformation of world capitals with the get request.',oper: 'WFS service must be used in the published case.' }

//Others
DemoDescription['mapPrint'] = {title: 'Map Print', desc: 'Definition: The map print function is mainly used to print the map data, vector elements, Popup, etc.', oper: 'Click the Label button to create a label. Click the Label to popup the message box. Click Print to print the map. Display the map data, label layer and message box.' }
DemoDescription['printscreen'] = {title: 'Map Screenshot', desc: 'Definition: Used to capture the ground and vector elements, and save as the local picture.', oper: 'Create the label by clicking the Label button. Click the Printscreen and save as local picture. The printscreen can capture the label, vector elements and so on, not the message box.' }
DemoDescription['a0mapPrint'] = {title: 'Map A0 Print', desc: 'Definition：Support to A0 page print. It can print the map data, but not the vector elements and message box. Only the map data can be printed because it got from the server.', oper: 'Select the print level and position. Click the A0 Large Format Print button. The server will calculate the right scope, and request the image with A0 size.' }
DemoDescription['projection'] = {title: 'Projection Transformation', desc: 'Definition: Transfer projection and coordinate of the client.', oper: 'Implement the conversation from EPSG:3857 to EPSG:4326. Move the mouse position, and you can see the converted mouse coordinates.' }
DemoDescription['dataWebGL'] = {title: 'WebGL Globe', desc: 'Definition: Display iServer data by WebGL Globe', oper: 'This sample display the data returned from iServer with the third-party WebGL Globe. The data format converts into the format required by WebGL Globe. Chrome is the best browser for this sample. Note that IE currently does not support WebGL, which can visit the WebGL in the publish state.' }
DemoDescription['setlayerstatus'] = {title: 'Sublayer Control', desc: 'Definition: Controls sublayers', oper: 'The function about controlling the visibility of sublayers usually is used with the function about getting the information of layers. Firstly, get the visibility state of the map layer, then create a temporary layer for the server, control the visibility state of sublayers during the generated temporary layers, finally, assign the newResourceID value into the generated TiledDynamicRESTLayer layer in order to display the temporary layer.' }
DemoDescription['tokenCredential'] = {title: 'Safety Certificate', desc: 'Definition: The token credential sample is to control the visibility of layers by token.', oper: '1. Open the iServer token credential and perform the access control for a specific map server sample; 2. Input the map server sample and the corresponding token into a text box; 3. Click OK. Note: This sample should use tiled dynamic REST Layer.' }
DemoDescription['d3_windmap'] = {title: 'Wind Map', desc: 'Definition: Wind map, simulates winter monsoon in China, based on d3js.', oper: 'None' }
DemoDescription['polling'] = {title: 'Polling', desc: 'Definition: Map services from different servers can be acquired through polling from different servers, therefore speeding the mapping.', oper: 'Input the address of the map server in the input box, click + sign to add one url. You can click add multiple url addresses.' }
DemoDescription['layerSwitch'] = {title: 'Roller Blind', desc: 'Definition: Rolling blind effect, which is realized through split windows to display two maps or layers. Layers can be compared and viewed through dragging rolling blind slider.', oper: 'Layer at back can be viewed and layers can be compared while pressing the mouse and dragging the rolling slide slider. This example currently supports browsers of Chrome, Firefox, IE9 and higher versions.' }
DemoDescription['d3_zoomablePacking'] = {title: 'D3 Picker', desc: 'Definition: D3 picker-Beijing Olympic Games Gold number picker. This example displays the extension layer (Element).', oper: '1. Publish the example in Tomcat; 2. Click the country name in picker. The gold number of this country in Beijing Olympic Games will be shown on map.' }
DemoDescription['mousestyle'] = {title: 'Mouse Style', desc: 'This example shows that the mouse is in different styles when the mouse moves to the corresponding layer.',oper:'Move the mouse to different layers to show different mouse styles.'}
DemoDescription['contextMenu'] = {title: 'Right Click Menu', desc: 'his example shows the map range right click to display the custom menu, cancel the right click menu.',oper:'Click the right mouse button, select the zoom option to zoom in on the map,Click the left mouse button or pan map, right menu hidden.'}
DemoDescription['jqueryContextMenu'] = {title: 'jquery Context Menu', desc: 'This example uses the ContextMenu plug-in of jQuery to implement the right menu',oper:'Click the right mouse button, select the zoom in and zoom out option to zoom on the map,Click the left mouse button or the mouse to remove the map, right-click menu.'}
DemoDescription['rightClick'] = {title: 'marker Context Menu', desc: 'This example uses the rightClick marker event to implement the right click menu.',oper:'Right click on the Marker, select the center then the marker be the center of the map; select Delete to remove the marker, click the left mouse button or pan map, right menu hidden.'}
DemoDescription['featureRightClick'] = {title: 'feature Context Menu', desc: 'This example uses the rightClick feature event(Tied with selectFeature control) to implement the right click menu.',oper:'Click the right mouse button on the point elements, select the center then the feature be the center of the map; select Delete to delete the operation of the feature, click the left mouse button or pan map, right menu hidden.'}
DemoDescription['d3_dynamicPieChart'] = {title: 'Dynamic Pie Chart', desc: 'Definition: dynamic pie chart, combined with the Elements layer, UTFGrid layer, D3.js implementation of the dynamic pie chart, it is the location of the mouse provinces where the proportion of the area of the country. This example shows the use of the extended layer (Elements) and the attribute layer (UTFGrid).', oper: 'Move the mouse to the various provinces of the region China, can see the corresponding pie graph of the province.' }
DemoDescription['echart_graphBar'] = {title: 'eChart Bar Graph', desc: 'Definition: the histogram of eChart. This example shows through the client extension layer elements in the map use Baidu eChart chart method. (Note: the data in the chart is random data, does not have the reference value)', oper: 'Move the mouse to the various provinces of the region China, can see the corresponding echart bar graph of the province.' }
DemoDescription['SM_OSMBuildings_addGeoJson'] = {title: 'OSMBuildings AddData', desc: 'Definition: AddData OSMBuildings, this example shows adding Buildings data to of GeoJson format to the client extension layer OSMBuildings. (Note: examples of data for simple data, more data and parameter settings please API reference https://github.com/kekscom/osmbuildings/blob/master/README.md) ', oper:' move base map, see the visual effect of the buildings; zoom map to view Building changes; different time to see buildings in the shadow of the changes, click OSMBuildings. Check the ID attribute information.'  }
DemoDescription['SM_OSMBuildings_DrawBuildings'] = {title: 'OSMBuildings Drawing', desc: 'Definition: OSMBuildings rendering, this example display in the client extension layer OSMBuildings drawing Buildings, and set the properties of some Building, drawing different OSMBuidings. (Note: examples of attributes for the simple parameters, more parameters refer to the https://github.com/kekscom/osmbuildings/blob/master/README.md part of the API. ) ', oper: 'first set OSMBuildings top height ,the bottom height, and the walls, top color; and then move the mouse, turn on the map in the choice of some location, click the left mouse button, position double-click the left mouse button at the end; can be drawn OSMBuidings.' }
DemoDescription['SM_OSMBuildings_RestData'] = {title: 'OSMBuildings Rest', desc: 'his example shows returning the polygon data from the server through the client extension layer OSMBuildings, according to some of the attributes of the data for further processing to generate OSMBuildings.', oper: ' move base map, see the visual effect of the buildings; zoom map to view Building changes; different time to see buildings in the shadow of the changes, click OSMBuildings. Check the ID attribute information.' }















